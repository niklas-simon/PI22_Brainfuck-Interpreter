openapi: 3.1.0
info:
  title: Brainfuck Interpreter
  version: 0.3.1
servers:
  - url: https://example.com/bf-itp
tags:
  - name: /api/run
    description: get / set interpreter data
  - name: /api/sse
    description: server-side events
  - name: /api/ctrl
    description: controls state of hw interpreter
paths:
  '/api/run/code':
    get:
      summary: get current code
      description: get code of current bf program
      operationId: getCode
      tags:
      - '/api/run'
      responses:
        200:
          description: the currently running code
          content:
            text/plain:
              schema:
                type: string
    put:
      summary: set current code
      description: set code of bf program if interpreter is idle
      operationId: setCode
      tags:
      - '/api/run'
      requestBody: 
        description: the new code
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: new code was set successfully
        422:
          description: the interpreter is currently running or the code is incorrectly nested
  '/api/sse/code':
    get:
      summary: subscribe to code changes
      description: sse endpoint for code changes
      operationId: sseCode
      tags:
      - '/api/sse'
      responses:
        '200':
          description: sse for code changes
          content:
            application/json: 
              schema:
                type: string
  '/api/run/input':
    get:
      summary: get current input
      description: get input for current bf program
      operationId: getInput
      tags:
      - '/api/run'
      responses:
        200:
          description: the current input
          content:
            text/plain:
              schema:
                type: string
    put:
      summary: set current input
      description: set input for bf program. If interpreter is already running, only unread input can be changed.
      operationId: setInput
      tags:
      - '/api/run'
      requestBody: 
        description: the new input
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: new input was set successfully
        422:
          description: tried to change input that has already been read
  '/api/sse/input':
    get:
      summary: subscribe to input changes
      description: sse endpoint for input changes
      operationId: sseInput
      tags:
      - '/api/sse'
      responses:
        '200':
          description: sse for input changes
          content:
            application/json: 
              schema:
                type: string
  '/api/run/output':
    get:
      summary: get current output
      description: get output from current program
      operationId: getOutput
      tags:
      - '/api/run'
      responses:
        '200':
          description: current output
          content:
            text/plain:
              schema:
                type: string
  '/api/sse/output':
    get:
      summary: subscribe to output changes
      description: sse endpoint for output changes
      operationId: sseOutput
      tags:
      - '/api/sse'
      responses:
        '200':
          description: sse for output changes
          content:
            application/json:
              schema:
                type: string
  '/api/run/state':
    get:
      summary: get current interpreter state
      description: get state of hw interpreter via digital twin if it is running
      operationId: getState
      tags:
      - '/api/run'
      responses:
        '200':
          description: current interpreter state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
  '/api/sse/state':
    get:
      summary: subscribe to state changes
      description: subscribe to sse for changes of interpreter state
      operationId: sseState
      tags:
      - '/api/sse'
      responses:
        '200':
          description: sse for state changes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
  '/api/run/speed':
    get:
      summary: get current speed
      description: get speed currently set for interpreter
      operationId: getSpeed
      tags:
      - '/api/run'
      responses:
        '200':
          description: current speed
          content:
            application/json:
              schema:
                type: number
    put:
      summary: set interpreter speed
      description: set speed for interpreter to run automatically
      operationId: setSpeed
      tags:
      - '/api/run'
      requestBody:
        description: the new speed
        content:
          application/json:
            schema:
              type: number
      responses:
        '200':
          description: speed set successfully
  '/api/sse/speed':
    get:
      summary: subscribe to speed changes
      description: subscribe to sse for changes of interpreter speed
      operationId: sseSpeed
      tags:
      - '/api/sse'
      responses:
        '200':
          description: sse for speed changes
          content:
            application/json:
              schema:
                type: number
  '/api/ctrl':
    put:
      summary: enable control
      description: start controlling hw interpreter to get digital twin data
      operationId: enableControl
      tags:
      - '/api/ctrl'
      responses:
        '200':
          description: control enabled
        '400':
          description: control was already enabled
    delete:
      summary: disable control
      description: stop controlling hw interpreter
      operationId: disableControl
      tags:
      - '/api/ctrl'
      responses:
        '200':
          description: control disabled
        '400':
          description: control was already disabled
  '/api/ctrl/start':
    post:
      summary: start interpreter
      description: either starts a new run or resumes a paused run
      operationId: startItp
      tags:
      - '/api/ctrl'
      responses:
        '200':
          description: interpreter was started or resumed
        '400':
          description: interpreter currently not controlled or already running
  '/api/ctrl/pause':
    post:
      summary: pause interpreter
      description: pauses hw interpreter if currently running
      operationId: pauseItp
      tags:
      - '/api/ctrl'
      responses:
        '200':
          description: interpreter paused
        '400':
          description: interpreter was not running or is uncontrolled
  '/api/ctrl/step':
    post:
      summary: execute single step
      description: let the interpreter run a single step. if the interpreter is currently idle, a new run will be started.
      operationId: stepItp
      tags:
      - '/api/ctrl'
      requestBody:
        description: the number of steps
        content:
          application/json:
            schema:
              type: number
      responses:
        '200':
          description: step executed
        '400':
          description: interpreter was not paused or initial or interpreter is not controlled
  '/api/ctrl/reset':
    post:
      summary: reset interpreter
      description: set interpreter to idle mode, stopping any running program
      operationId: resetItp
      tags:
      - '/api/ctrl'
      responses:
        '200':
          description: interpreter reset
        '400':
          description: interpreter is not controlled
  '/api/examples':
    get:
      summary: get examples
      description: get a list of examples 
      operationId: listExamples
      responses:
        '200':
          description: list of examples
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    desc:
                      type: string
                    code:
                      type: string
components:
  schemas:
    State:
      type: object
      properties:
        tape:
          type: array
          items:
            type: number
        head:
          type: number
        code:
          type: object
          properties:
            pc:
              type: number
            offset:
              type: number
            fragment:
              type: string
        ic:
          type: number
          description: input counter
        jumping:
          oneOf:
          - type: 'null'
          - type: 'number'
        stack:
          type: array
          items:
            type: number
        cycles:
          type: number
        control:
          type: string
          enum:
          - idle
          - startup
          - running
          - paused
          - uncontrolled
          - jumping
          - wait_input
          - output_ready
      required:
      - control